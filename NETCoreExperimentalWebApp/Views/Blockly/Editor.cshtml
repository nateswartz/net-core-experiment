
@{
    ViewData["Title"] = "Editor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editor</h2>

<i id="iconTalk" class="massive talk icon"></i>
<i id="iconHouse" class="massive home icon"></i>
<div class="ui divider"></div>
<div class="ui grid">
    <div class="six wide column">
        <div>
            Delay between commands (ms):
        </div>
        <div class="ui input">
            <input type="text" data-bind="value: delay">
        </div>
        <div class="ui hidden divider"></div>
        <div id="GenerateCode" class="ui button">Generate Code</div>
        <div id="RunCode" class="ui button">Run Code</div>
    </div>
    <div class="ten wide column">
        <div class="ui segment" style="white-space: pre-line"></div>
    </div>
</div>
<div class="ui hidden divider"></div>
<div id="blocklyDiv" style="height: 620px; width: 1000px;"></div>

<xml id="toolbox" style="display: none">
    <block type="icon_change_color"></block>
</xml>

@section Scripts {
    <script type="text/javascript" src='~/lib/google-blockly-941d8e4/blockly_compressed.js'></script>
    <script type="text/javascript" src='~/lib/google-blockly-941d8e4/generators/javascript.js'></script>
    <script type="text/javascript" src='~/lib/google-blockly-941d8e4/blocks_compressed.js'></script>
    <script type="text/javascript" src='~/lib/google-blockly-941d8e4/msg/js/en.js'></script>
    <script type="text/javascript" src='~/js/Blocks.js'></script>

    <script>
        var codeToExecute = [];

        var viewModel = (function () {
            var self = this;
            self.delay = ko.observable('500');

            return {
                delay: self.delay,
            };
        })();

        ko.applyBindings(viewModel);

        var workspace = Blockly.inject('blocklyDiv', { toolbox: document.getElementById('toolbox') });
        Blockly.JavaScript.addReservedWords('code');

        $("#GenerateCode").on("click",
            function () {
                var code = Blockly.JavaScript.workspaceToCode(workspace);
                $(".segment").text(code.replace(new RegExp(";", 'g'), ";\n"));
                console.log(code.replace(new RegExp(";", 'g'), ";\n"));
            }
        );

        $("#RunCode").on("click",
            function () {
                var code = Blockly.JavaScript.workspaceToCode(workspace);
                codeToExecute = code.split(";");
                executeStatement(0);
            }
        );

        function executeStatement(index) {
            if (index >= codeToExecute.length) {
                return;
            }
            console.log(codeToExecute[index]);
            eval(codeToExecute[index]);
            setTimeout(function () { executeStatement(index + 1) }, viewModel.delay());
        }
    </script>

}