@using Newtonsoft.Json
@model IEnumerable<Book>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var jsonData = JsonConvert.SerializeObject(Model);
    var Title = "Title";
    var Author = "Author";
    var Image = "Image";
}

<h2>List of Books</h2>
<div class="ui right floated icon buttons">
    <button id="btnDisplayGrid" class="ui button">
        <i class="block layout icon"></i>
    </button>
    <button id="btnDisplayList" class="ui button">
        <i class="sidebar icon"></i>
    </button>
</div>
<button id="btnAddBook" class="ui button">Add Book With Knockout</button>
<div class="ui divider"></div>
<p>
    <a class="ui secondary button" asp-action="Create">Enter a New Book</a>
</p>

<div class="ui divider"></div>
<h2 class="ui header">List of Books</h2>

<table id="listItems" class="ui celled table" style="display:none">
    <thead>
    <tr>
        <th>
            @Title
        </th>
        <th>
            @Author
        </th>
        <th>
            @Image
        </th>
        <th>
            Actions
        </th>
    </tr>
    </thead>
    <tbody data-bind="foreach: books">
        <tr>
            <td data-bind="text: @Title"></td>
            <td data-bind="text: @Author"></td>
            <td>
                <img class="ui tiny image" data-bind="attr: { src: @Image }" />
            </td>
            <td>
                <div class="ui button delete book" data-bind="attr: { 'data-value': id}">
                    <div>
                        <i class="bug icon large"></i>
                    </div>
                </div>
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Edit/' + id }">
                        <i class="edit icon large"></i>
                    </a>
                </div>
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Details/' + id }">
                        <i class="green info icon large"></i>
                    </a>
                </div>
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Delete/' + id }">
                        <i class="red delete icon large"></i>
                    </a>
                </div>
            </td>
        </tr>
    </tbody>
</table>

<div data-bind="foreach: books" id="gridItems" class="ui link cards">
    <div class="ui card">
        <a class="image" data-bind="attr: { href: 'Books/Edit/' + id }">
            <img data-bind="attr: { src: @Image }" />
        </a>
        <a class="content" data-bind="attr: { href: 'Books/Edit/' + id }">
            <div class="header" data-bind="text: @Title"></div>
            <div class="meta" data-bind="text: @Author"></div>
        </a>
        <div class="extra content">
            <div class="ui fluid buttons">
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Edit/' + id }">
                        <i class="edit icon large"></i>
                    </a>
                </div>
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Details/' + id }">
                        <i class="green info icon large"></i>
                    </a>
                </div>
                <div class="ui button">
                    <a data-bind="attr: { href: 'Books/Delete/' + id }">
                        <i class="red delete icon large"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modalAddBook" class="ui small modal">
    <div class="header">
        Enter a New Book
    </div>
    <div class="content">
        <form id="frmAddBook" class="ui form" onsubmit="return false">
            <div class="field">
                <label>@Title</label>
                <input id="inputBookTitle" type="text" name="@Title">
            </div>
            <div class="field">
                <label>@Author</label>
                <input id="inputBookAuthor" type="text" name="@Author">
            </div>
            <div class="field">
                <label>@Image</label>
                <input id="inputBookImage" type="text" name="@Image">
            </div>
            <div class="field" id="fieldBookType">
                <label>Dropdown</label>
                <select class="ui dropdown" name="dropdown">
                    <option value="0">Board</option>
                    <option value="1">Electronic</option>
                    <option value="2">Standard</option>
                </select>
            </div>
            <div class="ui divider"></div>
            <div class="ui buttons">
                <button id="btnConfirmAddBook" class="ui primary button">Confirm</button>
                <button id="btnCancelAddBook" class="ui button">Cancel</button>
            </div>
            <div class="ui error message"></div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        viewModel = {
            books: ko.observableArray()
        };

        $(document).ready(function() {
            // Initialize dropdown
            $('.ui.dropdown').dropdown();

            console.log(@Html.Raw(jsonData));
            // Convert MVC Model to Knockout ViewModel
            $(@Html.Raw(jsonData)).each(function(index, element) {
                viewModel.books.push(element);
            });
            ko.applyBindings(viewModel);

            // Setup form
            $('.ui .form').form({
                on: 'blur',
                fields: {
                    @Title: {
                        identifier: 'inputBookTitle',
                        rules: [
                            {
                                type: 'empty',
                                prompt: 'Please enter a Title'
                            }
                        ]
                    },
                    @Author: {
                        identifier: 'inputBookAuthor',
                        rules: [
                            {
                                type: 'empty',
                                prompt: 'Please enter an Author'
                            }
                        ]
                    },
                    @Image: {
                        identifier: 'inputBookImage',
                        rules: [
                            {
                                type: 'empty',
                                prompt: 'Please enter an Image'
                            }
                        ]
                    }
                },
                onSuccess: function () {
                    console.log("Adding Book");
                    console.log(viewModel.books());
                    var book = {
                        @Title: $("#inputBookTitle").val(),
                        @Author: $("#inputBookAuthor").val(),
                        Type: $("#fieldBookType .active").text(),
                        @Image: $("#inputBookImage").val()
                    }
                    console.log(book);
                    var addBook = $.ajax({
                        type: "POST",
                        url: "/Books/CreateViaJSON",
                        data: JSON.stringify(book),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) { book = data; }
                    });
                    addBook.done(function () {
                        console.log(book);
                        viewModel.books.push(book);
                        console.log(JSON.stringify(book));
                        console.log(viewModel.books());
                    });
                    $(".ui.modal").modal('hide');
                }
            });

            // Perform any event bindings on dynamic elements
            $(".delete.book.button").on("click",
                function() {
                    console.log("delete item " + $(this).attr('data-value'));
                }
            );
        });

        // Event bindings on static elements
        $("#btnDisplayGrid").on("click",
            function() {
                $("#listItems").fadeOut();
                $("#gridItems").fadeIn();
            }
        );

        $("#btnDisplayList").on("click",
            function() {
                $("#gridItems").fadeOut();
                $("#listItems").fadeIn();
            }
        );

        $("#btnAddBook").on("click",
            function() {
                $("#modalAddBook").modal('show');
                $("#modalAddBook .error").removeClass("error");
                $('.form .message').hide();
            }
        );

        $("#btnCancelAddBook").on("click",
            function() {
                $("#modalAddBook").modal('hide');
                $(".ui.form").form('clear');
                $("#modalAddBook .error").removeClass("error");
                $('.form .message').hide();
            }
        );

        $("#btnConfirmAddBook").on("click",
            function() {
                $('.form .message').show();
            }
        );

    </script>
}
