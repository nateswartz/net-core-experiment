@using NETCoreExperimentalWebApp.Models.StarWarsModels
@using Newtonsoft.Json
@model IEnumerable<StarshipModel>

@{
    ViewData["Title"] = "Starships";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Starships</h2>
<div class="ui remove button">Remove X-Wing</div>

<div data-bind="foreach: starships" id="gridItems" class="ui link cards column">
    <div class="ui card">
        <div class="content">
            <div class="header" data-bind="text: Name"></div>
        </div>
        <div class="content">
            <div class="meta" data-bind="text: Model"></div>
            <div class="meta" data-bind="text: Manufacturer"></div>
            <div class="meta" data-bind="text: Cost() + ' credits'"></div>
        </div>
        <div class="content">
            <div class="description" data-bind="text: Length() + ' meters'"></div>
            <div class="description" data-bind="text: 'Hyperdrive Rating: ' + HyperdriveRating()"></div>
            <div class="description" data-bind="text: 'MGLT: ' + MGLT()"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        viewModel = {
            starships: ko.observableArray()
        };

        function StarshipViewModel(name, model, manufacturer, cost, length, hyperdriverating, mglt) {
            var self = this;
            self.Name = ko.observable(name);
            self.Model = ko.observable(model);
            self.Manufacturer = ko.observable(manufacturer);
            self.Cost = ko.observable(cost);
            self.Length = ko.observable(length);
            self.HyperdriveRating = ko.observable(hyperdriverating);
            self.MGLT = ko.observable(mglt);
        };

        $(document).ready(function() {
            // Initialize dropdowns
            $('.ui.dropdown').dropdown();

            // Convert MVC Model to Knockout ViewModel
            $(@Html.Raw(JsonConvert.SerializeObject(Model))).each(function (index, element) {
                console.log(element);
                var starship = new StarshipViewModel(
                    element.Name,
                    element.Model,
                    element.Manufacturer,
                    element.cost_in_credits,
                    element.Length,
                    element.hyperdrive_rating,
                    element.MGLT);
                viewModel.starships.push(starship);
                console.log(starship);
            });
            ko.applyBindings(viewModel);
        });

        function removeStarshipByName(name) {
            console.log("here");
            viewModel.starships.remove(function(starship) {
                return starship.Name().toString() === name;
            });
        };

        $(".remove").on("click",
            function() {
                removeStarshipByName("X-wing");
            });

    </script>
}